package com.stip.net.dao;

import java.util.List;
import java.util.Map;

import com.stip.net.common.config.ibatis.GenericDAO;
import com.stip.net.model.MallGoodsInfo;
import com.stip.net.model.MallGoodsInfoExample;
import com.stip.net.vo.SaleRankListVo;

public class MallGoodsInfoDAO extends GenericDAO<MallGoodsInfo,MallGoodsInfoExample> implements IMallGoodsInfoDAO {

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table t_mall_goods_info
     *
     * @ibatorgenerated Thu Jun 30 15:09:33 CST 2016
     */
    public MallGoodsInfoDAO() {
        super();
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table t_mall_goods_info
     *
     * @ibatorgenerated Thu Jun 30 15:09:33 CST 2016
     */
    public int countByExample(MallGoodsInfoExample example) {
        Integer count = (Integer)  getSqlMapClientTemplate().queryForObject("MallGoodsInfo.countByExample", example);
        return count;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table t_mall_goods_info
     *
     * @ibatorgenerated Thu Jun 30 15:09:33 CST 2016
     */
    public int deleteByExample(MallGoodsInfoExample example) {
        int rows = getSqlMapClientTemplate().delete("MallGoodsInfo.deleteByExample", example);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table t_mall_goods_info
     *
     * @ibatorgenerated Thu Jun 30 15:09:33 CST 2016
     */
    public int deleteByPrimaryKey(String goodsId, Long id) {
        MallGoodsInfo key = new MallGoodsInfo();
        key.setGoodsId(goodsId);
        key.setId(id);
        int rows = getSqlMapClientTemplate().delete("MallGoodsInfo.deleteByPrimaryKey", key);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table t_mall_goods_info
     *
     * @ibatorgenerated Thu Jun 30 15:09:33 CST 2016
     */
    public void insert(MallGoodsInfo record) {
        getSqlMapClientTemplate().insert("MallGoodsInfo.insert", record);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table t_mall_goods_info
     *
     * @ibatorgenerated Thu Jun 30 15:09:33 CST 2016
     */
    public void insertSelective(MallGoodsInfo record) {
        getSqlMapClientTemplate().insert("MallGoodsInfo.insertSelective", record);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table t_mall_goods_info
     *
     * @ibatorgenerated Thu Jun 30 15:09:33 CST 2016
     */
    @SuppressWarnings("unchecked")
    public List<MallGoodsInfo> selectByExampleWithBLOBs(MallGoodsInfoExample example) {
        List<MallGoodsInfo> list = getSqlMapClientTemplate().queryForList("MallGoodsInfo.selectByExampleWithBLOBs", example);
        return list;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table t_mall_goods_info
     *
     * @ibatorgenerated Thu Jun 30 15:09:33 CST 2016
     */
    @SuppressWarnings("unchecked")
    public List<MallGoodsInfo> selectByExampleWithoutBLOBs(MallGoodsInfoExample example) {
        List<MallGoodsInfo> list = getSqlMapClientTemplate().queryForList("MallGoodsInfo.selectByExample", example);
        return list;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table t_mall_goods_info
     *
     * @ibatorgenerated Thu Jun 30 15:09:33 CST 2016
     */
    public MallGoodsInfo selectByPrimaryKey(String goodsId, Long id) {
        MallGoodsInfo key = new MallGoodsInfo();
        key.setGoodsId(goodsId);
        key.setId(id);
        MallGoodsInfo record = (MallGoodsInfo) getSqlMapClientTemplate().queryForObject("MallGoodsInfo.selectByPrimaryKey", key);
        return record;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table t_mall_goods_info
     *
     * @ibatorgenerated Thu Jun 30 15:09:33 CST 2016
     */
    public int updateByExampleSelective(MallGoodsInfo record, MallGoodsInfoExample example) {
        UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
        int rows = getSqlMapClientTemplate().update("MallGoodsInfo.updateByExampleSelective", parms);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table t_mall_goods_info
     *
     * @ibatorgenerated Thu Jun 30 15:09:33 CST 2016
     */
    public int updateByExample(MallGoodsInfo record, MallGoodsInfoExample example) {
        UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
        int rows = getSqlMapClientTemplate().update("MallGoodsInfo.updateByExampleWithBLOBs", parms);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table t_mall_goods_info
     *
     * @ibatorgenerated Thu Jun 30 15:09:33 CST 2016
     */
    public int updateByExampleWithoutBLOBs(MallGoodsInfo record, MallGoodsInfoExample example) {
        UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
        int rows = getSqlMapClientTemplate().update("MallGoodsInfo.updateByExample", parms);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table t_mall_goods_info
     *
     * @ibatorgenerated Thu Jun 30 15:09:33 CST 2016
     */
    public int updateByPrimaryKeySelective(MallGoodsInfo record) {
        int rows = getSqlMapClientTemplate().update("MallGoodsInfo.updateByPrimaryKeySelective", record);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table t_mall_goods_info
     *
     * @ibatorgenerated Thu Jun 30 15:09:33 CST 2016
     */
    public int updateByPrimaryKeyWithBLOBs(MallGoodsInfo record) {
        int rows = getSqlMapClientTemplate().update("MallGoodsInfo.updateByPrimaryKeyWithBLOBs", record);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table t_mall_goods_info
     *
     * @ibatorgenerated Thu Jun 30 15:09:33 CST 2016
     */
    public int updateByPrimaryKeyWithoutBLOBs(MallGoodsInfo record) {
        int rows = getSqlMapClientTemplate().update("MallGoodsInfo.updateByPrimaryKey", record);
        return rows;
    }

    /**
    /**
     * <p>t_mall_goods_info查询条件参数。</p>
     */
    private static class UpdateByExampleParms extends MallGoodsInfoExample {
        private MallGoodsInfo record;

        /**
         * <p>UpdateByExampleParms构造函数。</p>
         * @param record 实体
         * @param example 条件
         */
        public UpdateByExampleParms(MallGoodsInfo record, MallGoodsInfoExample example) {
            super(example);
            this.record = record;
        }

        /**
         * This method was generated by Apache iBATIS ibator.
         * This method corresponds to the database table t_mall_goods_info
         *
         * @ibatorgenerated Thu Jun 30 15:09:33 CST 2016
         */
        @SuppressWarnings("unused")
        public MallGoodsInfo getRecord() {
            return record;
        }
    }
    
    /**
     * 根据商家ID 和 审核状态，批量更新审核状态
     */
    public int updateAllAuditStatusByInfo(MallGoodsInfoExample example) {
        int rows = getSqlMapClientTemplate().update("MallGoodsInfo.updateAllAuditStatusByInfo",example);
        return rows;
    }

	public int updateAuditByInfo(MallGoodsInfoExample example) {
		 int rows = getSqlMapClientTemplate().update("MallGoodsInfo.updateAuditByInfo",example);
	        return rows;
	}
	public List<SaleRankListVo> selectgoodsSaleTopByMerchantId(Map<String,Object> param) {
		List<SaleRankListVo> list = getSqlMapClientTemplate().queryForList("MallGoodsInfo.selectSaleTopByMerchantId",param);
		return list;
	}
}